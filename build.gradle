plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'jacoco'
    id 'checkstyle'
    id 'net.researchgate.release' version "${researchgateRelease}"
    id 'io.github.gradle-nexus.publish-plugin' version "${nexusPublish}"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'io.vavr'
version = '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

dependencies {
    implementation "io.vavr:vavr:${vavrVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${fasterxmlVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
    testImplementation "javax.xml.bind:jaxb-api:${jaxbVersion}"
    testImplementation "com.squareup:javapoet:${javapoetVersion}"
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:${fasterxmlVersion}"
    testImplementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${fasterxmlVersion}"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:${fasterxmlVersion}"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${fasterxmlVersion}"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${fasterxmlVersion}"
    testImplementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${fasterxmlVersion}"
    testImplementation "com.fasterxml.jackson.module:jackson-module-scala_2.11:${fasterxmlVersion}"
}

test {
    useJUnitPlatform()
}

tasks.named('wrapper') {
    distributionType = Wrapper.DistributionType.ALL
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    sourceSets sourceSets.main

    reports {
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
    }
}

tasks.named('check') {
    dependsOn jacocoTestReport
    dependsOn javadoc
}

tasks.named('jar') {
    manifest {
        attributes('Automatic-Module-Name': 'io.vavr')
    }
}

codeCoverageReport.dependsOn {
    project.test
}

jar {
    manifest {
        attributes(
                'Automatic-Module-Name': 'io.vavr.jackson'
        )
    }
}

publishing {
    repositories {
        maven {
            // A test repository which can be used to
            // verify what is going to be uploaded by
            // running ./gradlew publishAllPublicationsToTestRepo
            name = "testRepo"
            url = "${buildDir}/repo"
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = project.name
                description = "Jackson datatype module for Vavr.io"
                url = 'https://www.vavr.io'
                inceptionYear = "2016"

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "ruslansennov"
                        name = "Ruslan Sennov"
                        email = "ruslan.sennov@gmail.com"
                    }
                    developer {
                        id = "minconghuang"
                        name = "Mincong Huang"
                        email = "mincong.h@gmail.com"
                    }
                    developer {
                        id = "bmscomp"
                        name = "Said Boudjelda"
                        email = "bmscomp@gmail.com"
                    }
                }

                scm {
                    connection = "scm:git:git@github.com:vavr-io/vavr-jackson.git"
                    developerConnection = "scm:git:git@github.com:vavr-io/vavr-jackson.git"
                    url = "git@github.com:vavr-io/vavr-jackson.git"
                }
            }
        }
    }
}

// Signing configuration mandatory for Maven Central
signing {
    required { !version.endsWith("-SNAPSHOT") }
    publishing.publications.configureEach {
        sign(it)
    }
}

// Configure the publishing repositories for Maven Central
nexusPublishing {
    repositories {
        sonatype {
            username.set(providers.systemProperty("ossrhUsername").orElse("").forUseAtConfigurationTime())
            password.set(providers.systemProperty("ossrhPassword").orElse("").forUseAtConfigurationTime())
        }
    }
}

// Skip warnings when building with a higher version of java than 8
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc).tap {
            configureEach {
                options.addStringOption('Xdoclint:none', '-quiet')
            }
        }
    }
}
